services:
    receipt:
        image: receipt-microservice:v1.0.0
        deploy:
            replicas: 2
        networks:
            mired:
                aliases:
                    - receipt.universidad.localhost
        environment:
          - SQLALCHEMY_TRACK_MODIFICATIONS=${SQLALCHEMY_TRACK_MODIFICATIONS}
          - SQLALCHEMY_RECORD_QUERIES=${SQLALCHEMY_RECORD_QUERIES}
          - TEST_DATABASE_URI=${TEST_DATABASE_URI}
          - DEV_DATABASE_URI=${DEV_DATABASE_URI}
          - PROD_DATABASE_URI=${PROD_DATABASE_URI}
          - FLASK_CONTEXT=${FLASK_CONTEXT}
          - REDIS_HOST=${REDIS_HOST}
          - REDIS_PORT=${REDIS_PORT}
          - REDIS_DB=${REDIS_DB}
          - REDIS_PASSWORD=${REDIS_PASSWORD}
          - URL_ARTICLE_SERVICE=${URL_ARTICLE_SERVICE}
          - URL_STOCK_SERVICE=${URL_STOCK_SERVICE}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.receipt.rule=Host(`receipt.universidad.localhost`)"
            - "traefik.http.routers.receipt.tls=true"
            - "traefik.http.services.receipt.loadbalancer.server.port=5000"
            - "traefik.docker.network=mired"  
            # Patron Circuit Breaker https://doc.traefik.io/traefik/middlewares/http/circuitbreaker/
            - "traefik.http.middlewares.receipt.circuitbracker.expression=NetworkErrorRatio() > 0.5"
            - "traefik.http.middlewares.receipt.circuitbracker.expression=ResponseCodeRatio(500,600,0,600) > 0.25"
            - "traefik.http.middlewares.receipt.circuitbracker.expression=LatencyAtQuantileMS(50) > 100"
            

networks:
    mired:
        external: true